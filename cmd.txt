Ã‰tape 4 : Installer le bundle Symfony
composer require symfony/webpack-encore-bundle

ğŸ”¹ Ã‰tape 5 : Installer Webpack Encore et ses dÃ©pendances
yarn add --dev @symfony/webpack-encore
yarn add --dev webpack webpack-cli
yarn add --dev sass-loader sass css-loader mini-css-extract-plugin
==> Ã‡a installe Encore + Webpack + loaders pour compiler ton CSS/SCSS.

ğŸ”¹ Ã‰tape 6 :
Installer Babel et ses presets
yarn add --dev @babel/core @babel/preset-env babel-loader core-js regenerator-runtime
@babel/core â†’ moteur Babel
@babel/preset-env â†’ preset moderne ES6+
babel-loader â†’ pour brancher Babel dans Webpack
core-js et regenerator-runtime â†’ pour gÃ©rer les polyfills

ğŸ”¹ Ã‰tape 7 :
composer require symfony/stimulus-bundle
yarn add @hotwired/stimulus @symfony/stimulus-bridge

ğŸ”¹ Ã‰tape 8 :
ModifiÃ© boostrap.js
// assets/bootstrap.js
import { startStimulusApp } from '@symfony/stimulus-bridge';
import controllers from './controllers.json';

// Initialise Stimulus avec les contrÃ´leurs dÃ©clarÃ©s
const app = startStimulusApp(require.context(
    '@symfony/stimulus-bridge/lazy-controller-loader!./controllers',
    true,
    /\.[jt]sx?$/
));

// Tu peux enregistrer des contrÃ´leurs custom ici si besoin
// app.register('some_controller_name', SomeImportedController);

export default app;

ğŸ”¹ Ã‰tape 9 :
composer require symfony/ux-turbo
yarn add @symfony/ux-turbo
yarn add @hotwired/turbo

Boostrap
yarn add bootstrap @popperjs/core
mv assets/styles/app.css assets/styles/app.scss


